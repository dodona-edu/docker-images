name: Publish

on: [push]

env:
  AMD64_ONLY: '["assembly","compilers","java","r"]'

jobs:
  build:
    name: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [assembly, bash, c, compilers, csharp, docker, haskell, html, java, java21, nextflow, nodejs, postgres, prolog, python, r, scheme, sqlite, tested]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set docker tags
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          docker.io/dodona/dodona-${{ matrix.image }}
          ghcr.io/${{ github.repository_owner }}/dodona-${{ matrix.image }}
        # Branch tags, PR tags, and a short-SHA tag
        tags: |
          type=ref,event=branch
          type=sha,format=short
        flavor: |
          latest=auto # adds :latest only on default branch

    - name: Build and push (Docker Hub + GHCR)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: dodona-${{ matrix.image }}.dockerfile
        push: true
        # platforms: ${{ contains(fromJson(env.AMD64_ONLY), matrix.image) && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
        platforms: 'linux/amd64'
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
